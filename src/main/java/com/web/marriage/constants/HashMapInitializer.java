package com.web.marriage.constants;

import org.apache.commons.lang3.tuple.Pair;
import org.springframework.stereotype.Component;

import jakarta.annotation.PostConstruct;

import java.util.HashMap;
import java.util.Map;

@Component
public class HashMapInitializer {

    private Map<Pair<Integer, Integer>, Integer> dataMap;

    @PostConstruct
    public void init() {
        dataMap = new HashMap<>();

        // Populate the map with the given data
        dataMap.put(Pair.of(1, 1), 100);
        dataMap.put(Pair.of(2, 1), 88);
        dataMap.put(Pair.of(3, 1), 75);
        dataMap.put(Pair.of(4, 1), 63);
        dataMap.put(Pair.of(5, 1), 50);
        dataMap.put(Pair.of(6, 1), 38);
        dataMap.put(Pair.of(7, 1), 25);
        dataMap.put(Pair.of(8, 1), 13);
        dataMap.put(Pair.of(9, 1), 0);
        dataMap.put(Pair.of(1, 2), 88);
        dataMap.put(Pair.of(2, 2), 100);
        dataMap.put(Pair.of(3, 2), 88);
        dataMap.put(Pair.of(4, 2), 75);
        dataMap.put(Pair.of(5, 2), 63);
        dataMap.put(Pair.of(6, 2), 25);
        dataMap.put(Pair.of(7, 2), 13);
        dataMap.put(Pair.of(8, 2), 0);
        dataMap.put(Pair.of(9, 2), 13);
        dataMap.put(Pair.of(1, 3), 75);
        dataMap.put(Pair.of(2, 3), 88);
        dataMap.put(Pair.of(3, 3), 100);
        dataMap.put(Pair.of(4, 3), 88);
        dataMap.put(Pair.of(5, 3), 75);
        dataMap.put(Pair.of(6, 3), 13);
        dataMap.put(Pair.of(7, 3), 0);
        dataMap.put(Pair.of(8, 3), 13);
        dataMap.put(Pair.of(9, 3), 25);
        dataMap.put(Pair.of(1, 4), 63);
        dataMap.put(Pair.of(2, 4), 75);
        dataMap.put(Pair.of(3, 4), 88);
        dataMap.put(Pair.of(4, 4), 100);
        dataMap.put(Pair.of(5, 4), 88);
        dataMap.put(Pair.of(6, 4), 0);
        dataMap.put(Pair.of(7, 4), 13);
        dataMap.put(Pair.of(8, 4), 50);
        dataMap.put(Pair.of(9, 4), 75);
        dataMap.put(Pair.of(1, 5), 50);
        dataMap.put(Pair.of(2, 5), 63);
        dataMap.put(Pair.of(3, 5), 75);
        dataMap.put(Pair.of(4, 5), 88);
        dataMap.put(Pair.of(5, 5), 100);
        dataMap.put(Pair.of(6, 5), 88);
        dataMap.put(Pair.of(7, 5), 75);
        dataMap.put(Pair.of(8, 5), 63);
        dataMap.put(Pair.of(9, 5), 50);
        dataMap.put(Pair.of(1, 6), 75);
        dataMap.put(Pair.of(2, 6), 25);
        dataMap.put(Pair.of(3, 6), 13);
        dataMap.put(Pair.of(4, 6), 0);
        dataMap.put(Pair.of(5, 6), 88);
        dataMap.put(Pair.of(6, 6), 100);
        dataMap.put(Pair.of(7, 6), 88);
        dataMap.put(Pair.of(8, 6), 75);
        dataMap.put(Pair.of(9, 6), 63);
        dataMap.put(Pair.of(1, 7), 50);
        dataMap.put(Pair.of(2, 7), 13);
        dataMap.put(Pair.of(3, 7), 0);
        dataMap.put(Pair.of(4, 7), 13);
        dataMap.put(Pair.of(5, 7), 75);
        dataMap.put(Pair.of(6, 7), 88);
        dataMap.put(Pair.of(7, 7), 100);
        dataMap.put(Pair.of(8, 7), 88);
        dataMap.put(Pair.of(9, 7), 75);
        dataMap.put(Pair.of(1, 8), 13);
        dataMap.put(Pair.of(2, 8), 0);
        dataMap.put(Pair.of(3, 8), 13);
        dataMap.put(Pair.of(4, 8), 34);
        dataMap.put(Pair.of(5, 8), 63);
        dataMap.put(Pair.of(6, 8), 75);
        dataMap.put(Pair.of(7, 8), 88);
        dataMap.put(Pair.of(8, 8), 100);
        dataMap.put(Pair.of(9, 8), 88);
        dataMap.put(Pair.of(1, 9), 0);
        dataMap.put(Pair.of(2, 9), 13);
        dataMap.put(Pair.of(3, 9), 25);
        dataMap.put(Pair.of(4, 9), 38);
        dataMap.put(Pair.of(5, 9), 50);
        dataMap.put(Pair.of(6, 9), 63);
        dataMap.put(Pair.of(7, 9), 75);
        dataMap.put(Pair.of(8, 9), 88);
        dataMap.put(Pair.of(9, 9), 100);
        dataMap.put(Pair.of(46, 46), 100);
        dataMap.put(Pair.of(47, 46), 86);
        dataMap.put(Pair.of(48, 46), 72);
        dataMap.put(Pair.of(49, 46), 57);
        dataMap.put(Pair.of(50, 46), 42);
        dataMap.put(Pair.of(51, 46), 28);
        dataMap.put(Pair.of(52, 46), 14);
        dataMap.put(Pair.of(53, 46), 0);
        dataMap.put(Pair.of(46, 47), 86);
        dataMap.put(Pair.of(47, 47), 100);
        dataMap.put(Pair.of(48, 47), 80);
        dataMap.put(Pair.of(49, 47), 60);
        dataMap.put(Pair.of(50, 47), 40);
        dataMap.put(Pair.of(51, 47), 20);
        dataMap.put(Pair.of(52, 47), 0);
        dataMap.put(Pair.of(53, 47), 14);
        dataMap.put(Pair.of(46, 48), 72);
        dataMap.put(Pair.of(47, 48), 80);
        dataMap.put(Pair.of(48, 48), 100);
        dataMap.put(Pair.of(49, 48), 66);
        dataMap.put(Pair.of(50, 48), 33);
        dataMap.put(Pair.of(51, 48), 0);
        dataMap.put(Pair.of(52, 48), 20);
        dataMap.put(Pair.of(53, 48), 38);
        dataMap.put(Pair.of(46, 49), 57);
        dataMap.put(Pair.of(47, 49), 60);
        dataMap.put(Pair.of(48, 49), 66);
        dataMap.put(Pair.of(49, 49), 100);
        dataMap.put(Pair.of(50, 49), 0);
        dataMap.put(Pair.of(51, 49), 34);
        dataMap.put(Pair.of(52, 49), 40);
        dataMap.put(Pair.of(53, 49), 43);
        dataMap.put(Pair.of(46, 50), 42);
        dataMap.put(Pair.of(47, 50), 40);
        dataMap.put(Pair.of(48, 50), 33);
        dataMap.put(Pair.of(49, 50), 0);
        dataMap.put(Pair.of(50, 50), 100);
        dataMap.put(Pair.of(51, 50), 66);
        dataMap.put(Pair.of(52, 50), 60);
        dataMap.put(Pair.of(53, 50), 58);
        dataMap.put(Pair.of(46, 51), 28);
        dataMap.put(Pair.of(47, 51), 20);
        dataMap.put(Pair.of(48, 51), 0);
        dataMap.put(Pair.of(49, 51), 34);
        dataMap.put(Pair.of(50, 51), 66);
        dataMap.put(Pair.of(51, 51), 100);
        dataMap.put(Pair.of(52, 51), 80);
        dataMap.put(Pair.of(53, 51), 72);
        dataMap.put(Pair.of(46, 52), 14);
        dataMap.put(Pair.of(47, 52), 0);
        dataMap.put(Pair.of(48, 52), 20);
        dataMap.put(Pair.of(49, 52), 40);
        dataMap.put(Pair.of(50, 52), 60);
        dataMap.put(Pair.of(51, 52), 80);
        dataMap.put(Pair.of(52, 52), 100);
        dataMap.put(Pair.of(53, 52), 86);
        dataMap.put(Pair.of(46, 53), 0);
        dataMap.put(Pair.of(47, 53), 14);
        dataMap.put(Pair.of(48, 53), 38);
        dataMap.put(Pair.of(49, 53), 43);
        dataMap.put(Pair.of(50, 53), 8);
        dataMap.put(Pair.of(51, 53), 72);
        dataMap.put(Pair.of(52, 53), 86);
        dataMap.put(Pair.of(53, 53), 100);
        dataMap.put(Pair.of(18, 18), 100);
        dataMap.put(Pair.of(19, 18), 83);
        dataMap.put(Pair.of(20, 18), 66);
        dataMap.put(Pair.of(21, 18), 50);
        dataMap.put(Pair.of(22, 18), 34);
        dataMap.put(Pair.of(23, 18), 17);
        dataMap.put(Pair.of(24, 18), 0);
        dataMap.put(Pair.of(18, 19), 83);
        dataMap.put(Pair.of(19, 19), 100);
        dataMap.put(Pair.of(20, 19), 75);
        dataMap.put(Pair.of(21, 19), 50);
        dataMap.put(Pair.of(22, 19), 25);
        dataMap.put(Pair.of(23, 19), 0);
        dataMap.put(Pair.of(24, 19), 17);
        dataMap.put(Pair.of(18, 20), 66);
        dataMap.put(Pair.of(19, 20), 75);
        dataMap.put(Pair.of(20, 20), 100);
        dataMap.put(Pair.of(21, 20), 50);
        dataMap.put(Pair.of(22, 20), 0);
        dataMap.put(Pair.of(23, 20), 25);
        dataMap.put(Pair.of(24, 20), 33);
        dataMap.put(Pair.of(18, 21), 50);
        dataMap.put(Pair.of(19, 21), 50);
        dataMap.put(Pair.of(20, 21), 50);
        dataMap.put(Pair.of(21, 21), 100);
        dataMap.put(Pair.of(22, 21), 50);
        dataMap.put(Pair.of(23, 21), 50);
        dataMap.put(Pair.of(24, 21), 50);
        dataMap.put(Pair.of(18, 22), 34);
        dataMap.put(Pair.of(19, 22), 55);
        dataMap.put(Pair.of(20, 22), 0);
        dataMap.put(Pair.of(21, 22), 50);
        dataMap.put(Pair.of(22, 22), 100);
        dataMap.put(Pair.of(23, 22), 45);
        dataMap.put(Pair.of(24, 22), 66);
        dataMap.put(Pair.of(18, 23), 17);
        dataMap.put(Pair.of(19, 23), 0);
        dataMap.put(Pair.of(20, 23), 25);
        dataMap.put(Pair.of(21, 23), 50);
        dataMap.put(Pair.of(22, 23), 45);
        dataMap.put(Pair.of(23, 23), 100);
        dataMap.put(Pair.of(24, 23), 83);
        dataMap.put(Pair.of(18, 24), 0);
        dataMap.put(Pair.of(19, 24), 17);
        dataMap.put(Pair.of(20, 24), 33);
        dataMap.put(Pair.of(21, 24), 50);
        dataMap.put(Pair.of(22, 24), 66);
        dataMap.put(Pair.of(23, 24), 83);
        dataMap.put(Pair.of(24, 24), 100);
        dataMap.put(Pair.of(58, 58), 100);
        dataMap.put(Pair.of(59, 58), 80);
        dataMap.put(Pair.of(60, 58), 60);
        dataMap.put(Pair.of(61, 58), 40);
        dataMap.put(Pair.of(62, 58), 20);
        dataMap.put(Pair.of(63, 58), 0);
        dataMap.put(Pair.of(58, 59), 80);
        dataMap.put(Pair.of(59, 59), 100);
        dataMap.put(Pair.of(60, 59), 66);
        dataMap.put(Pair.of(61, 59), 33);
        dataMap.put(Pair.of(62, 59), 0);
        dataMap.put(Pair.of(63, 59), 20);
        dataMap.put(Pair.of(58, 60), 60);
        dataMap.put(Pair.of(59, 60), 66);
        dataMap.put(Pair.of(60, 60), 100);
        dataMap.put(Pair.of(61, 60), 0);
        dataMap.put(Pair.of(62, 60), 33);
        dataMap.put(Pair.of(63, 60), 40);
        dataMap.put(Pair.of(58, 61), 40);
        dataMap.put(Pair.of(59, 61), 33);
        dataMap.put(Pair.of(60, 61), 0);
        dataMap.put(Pair.of(61, 61), 100);
        dataMap.put(Pair.of(62, 61), 66);
        dataMap.put(Pair.of(63, 61), 33);
        dataMap.put(Pair.of(58, 62), 20);
        dataMap.put(Pair.of(59, 62), 0);
        dataMap.put(Pair.of(60, 62), 33);
        dataMap.put(Pair.of(61, 62), 66);
        dataMap.put(Pair.of(62, 62), 100);
        dataMap.put(Pair.of(63, 62), 80);
        dataMap.put(Pair.of(58, 63), 0);
        dataMap.put(Pair.of(59, 63), 20);
        dataMap.put(Pair.of(60, 63), 40);
        dataMap.put(Pair.of(61, 63), 33);
        dataMap.put(Pair.of(62, 63), 80);
        dataMap.put(Pair.of(63, 63), 100);
        dataMap.put(Pair.of(31, 31), 100);
        dataMap.put(Pair.of(32, 31), 75);
        dataMap.put(Pair.of(33, 31), 50);
        dataMap.put(Pair.of(34, 31), 25);
        dataMap.put(Pair.of(35, 31), 0);
        dataMap.put(Pair.of(31, 32), 75);
        dataMap.put(Pair.of(32, 32), 100);
        dataMap.put(Pair.of(33, 32), 50);
        dataMap.put(Pair.of(34, 32), 0);
        dataMap.put(Pair.of(35, 32), 25);
        dataMap.put(Pair.of(31, 33), 50);
        dataMap.put(Pair.of(32, 33), 50);
        dataMap.put(Pair.of(33, 33), 100);
        dataMap.put(Pair.of(34, 33), 50);
        dataMap.put(Pair.of(35, 33), 50);
        dataMap.put(Pair.of(31, 34), 25);
        dataMap.put(Pair.of(32, 34), 0);
        dataMap.put(Pair.of(33, 34), 50);
        dataMap.put(Pair.of(34, 34), 100);
        dataMap.put(Pair.of(35, 34), 50);
        dataMap.put(Pair.of(31, 35), 0);
        dataMap.put(Pair.of(32, 35), 25);
        dataMap.put(Pair.of(33, 35), 50);
        dataMap.put(Pair.of(34, 35), 50);
        dataMap.put(Pair.of(35, 35), 100);
        dataMap.put(Pair.of(66, 66), 100);
        dataMap.put(Pair.of(67, 66), 66);
        dataMap.put(Pair.of(68, 66), 33);
        dataMap.put(Pair.of(69, 66), 0);
        dataMap.put(Pair.of(66, 67), 66);
        dataMap.put(Pair.of(67, 67), 100);
        dataMap.put(Pair.of(68, 67), 0);
        dataMap.put(Pair.of(69, 67), 33);
        dataMap.put(Pair.of(66, 68), 33);
        dataMap.put(Pair.of(67, 68), 0);
        dataMap.put(Pair.of(68, 68), 100);
        dataMap.put(Pair.of(69, 68), 66);
        dataMap.put(Pair.of(66, 69), 0);
        dataMap.put(Pair.of(67, 69), 33);
        dataMap.put(Pair.of(68, 69), 66);
        dataMap.put(Pair.of(69, 69), 100);
        dataMap.put(Pair.of(40, 40), 100);
        dataMap.put(Pair.of(41, 40), 50);
        dataMap.put(Pair.of(42, 40), 0);
        dataMap.put(Pair.of(40, 41), 50);
        dataMap.put(Pair.of(41, 41), 100);
        dataMap.put(Pair.of(42, 41), 50);
        dataMap.put(Pair.of(40, 42), 0);
        dataMap.put(Pair.of(41, 42), 50);
        dataMap.put(Pair.of(42, 42), 100);
        dataMap.put(Pair.of(72, 72), 100);
        dataMap.put(Pair.of(73, 72), 0);
        dataMap.put(Pair.of(72, 73), 0);
        dataMap.put(Pair.of(73, 73), 100);
        dataMap.put(Pair.of(45, 45), 100);
    }

    public Map<Pair<Integer, Integer>, Integer> getDataMap() {
        return dataMap;
    }
}